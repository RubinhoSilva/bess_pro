# Multi-stage build for simple frontend
FROM --platform=linux/arm64 node:20-alpine AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY apps/frontend/package*.json ./apps/frontend/

# Install dependencies  
RUN npm ci

# Copy source code
COPY apps/frontend ./apps/frontend

# Build the application with increased heap size
RUN cd apps/frontend && NODE_OPTIONS="--max-old-space-size=2048" npm run build

# Production stage - Minimal nginx for static files only
FROM --platform=linux/arm64 nginx:alpine AS production

# Minimal nginx config (no proxy, just static files)
RUN echo 'server {' > /etc/nginx/conf.d/default.conf && \
    echo '    listen 80;' >> /etc/nginx/conf.d/default.conf && \
    echo '    root /usr/share/nginx/html;' >> /etc/nginx/conf.d/default.conf && \
    echo '    index index.html;' >> /etc/nginx/conf.d/default.conf && \
    echo '    try_files $uri $uri/ /index.html;' >> /etc/nginx/conf.d/default.conf && \
    echo '}' >> /etc/nginx/conf.d/default.conf

# Copy built application
COPY --from=builder /app/apps/frontend/dist /usr/share/nginx/html

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]