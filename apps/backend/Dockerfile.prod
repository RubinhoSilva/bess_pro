# Multi-stage build for production ARM64
FROM --platform=linux/arm64 node:20-alpine AS base

# Install only runtime dependencies
RUN apk add --no-cache curl

# Build dependencies stage (for native modules compilation)
FROM --platform=linux/arm64 node:20-alpine AS builder-deps
RUN apk add --no-cache python3 make g++ libc6-compat

# Builder stage
FROM builder-deps AS builder

WORKDIR /app

# Copy package files first (better layer caching)
COPY packages/shared/package*.json ./packages/shared/
COPY apps/backend/package*.json ./apps/backend/
COPY tsconfig.base.json ./
COPY tsconfig.base.json ./packages/

# Install shared package dependencies
WORKDIR /app/packages/shared
RUN npm ci

# Copy shared source and build
COPY packages/shared ./
RUN npm run build

# Install backend dependencies (ALL, including devDependencies for build)
WORKDIR /app/apps/backend
RUN npm ci

# Copy backend source code and config files
COPY apps/backend/src ./src
COPY apps/backend/tsconfig.json ./
COPY apps/backend/tsconfig-alias.json ./

# Fix shared package symlink
RUN rm -rf ./node_modules/@bess-pro/shared && \
    mkdir -p ./node_modules/@bess-pro && \
    ln -s /app/packages/shared ./node_modules/@bess-pro/shared

# Build the application with increased heap size
RUN NODE_OPTIONS="--max-old-space-size=2048" npm run build

# Remove devDependencies after build
RUN npm prune --production

# Production stage (minimal runtime only)
FROM base AS production

# Create app user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

WORKDIR /app

# Copy built application from builder
COPY --from=builder --chown=nodejs:nodejs /app/apps/backend/dist ./apps/backend/dist
COPY --from=builder --chown=nodejs:nodejs /app/apps/backend/node_modules ./apps/backend/node_modules
COPY --from=builder --chown=nodejs:nodejs /app/packages/shared ./packages/shared
COPY --from=builder --chown=nodejs:nodejs /app/apps/backend/package.json ./apps/backend/

# Fix shared package symlink
RUN rm -rf ./apps/backend/node_modules/@bess-pro/shared && \
    mkdir -p ./apps/backend/node_modules/@bess-pro && \
    ln -s /app/packages/shared ./apps/backend/node_modules/@bess-pro/shared

# Create upload and logs directories
RUN mkdir -p /app/uploads /app/logs && \
    chown -R nodejs:nodejs /app

USER nodejs

EXPOSE 8010

HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:8010/api/v1/health || exit 1

CMD ["node", "apps/backend/dist/index.js"]