# Multi-stage build for production ARM64
FROM --platform=linux/arm64 node:20-alpine AS base

# Install dependencies for node-gyp on ARM64
RUN apk add --no-cache python3 make g++ libc6-compat

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY apps/backend/package*.json ./apps/backend/

# Install dependencies
RUN npm install --only=production --ignore-scripts

# Build stage
FROM --platform=linux/arm64 node:20-alpine AS builder

WORKDIR /app

# Copy package files and install all dependencies
COPY package*.json ./
COPY apps/backend/package*.json ./apps/backend/
RUN npm install

# Copy source code and config files
COPY apps/backend/src ./apps/backend/src
COPY apps/backend/tsconfig.json ./apps/backend/
COPY apps/backend/tsconfig-alias.json ./apps/backend/
COPY tsconfig.base.json ./
COPY packages/ ./packages/

# Create symlink for tsconfig.base.json (fallback for resolution issues)
RUN ln -sf /app/tsconfig.base.json /app/packages/tsconfig.base.json || true
RUN ln -sf /app/tsconfig.base.json /app/apps/tsconfig.base.json || true

# Build the application with increased heap size and resolve aliases
RUN cd apps/backend && NODE_OPTIONS="--max-old-space-size=2048" npm run build

# Production stage
FROM --platform=linux/arm64 node:20-alpine AS production

# Install curl for healthcheck on ARM64
RUN apk add --no-cache curl

# Create app user
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nodejs -u 1001

WORKDIR /app

# Copy production dependencies
COPY --from=base --chown=nodejs:nodejs /app/node_modules ./node_modules
COPY --from=base --chown=nodejs:nodejs /app/apps/backend/node_modules ./apps/backend/node_modules

# Copy built application
COPY --from=builder --chown=nodejs:nodejs /app/apps/backend/dist ./apps/backend/dist
COPY --from=builder --chown=nodejs:nodejs /app/apps/backend/package.json ./apps/backend/

# Create upload and logs directories
RUN mkdir -p /app/uploads /app/logs
RUN chown -R nodejs:nodejs /app

USER nodejs

EXPOSE 8010

HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:8010/api/v1/health || exit 1

CMD ["node", "apps/backend/dist/index.js"]